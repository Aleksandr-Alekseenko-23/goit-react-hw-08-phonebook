{"version":3,"file":"static/js/735.8bf8417b.chunk.js","mappings":"sTAGaA,EAAWC,EAAAA,GAAAA,GAAH,+PAOVC,EAAAA,EAAAA,UAIAA,EAAAA,EAAAA,SAKEC,EAAUF,EAAAA,GAAAA,IAAH,0NAITC,EAAAA,EAAAA,WAKAA,EAAAA,EAAAA,SAKEE,EAAiBH,EAAAA,GAAAA,IAAH,qEAKdI,EAAaJ,EAAAA,GAAAA,OAAH,qHAOVK,EAAeL,EAAAA,GAAAA,IAAH,4F,8GC6DzB,UA3FyB,WACvB,IAAMM,GAAWC,EAAAA,EAAAA,MAEXC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,GACI,mBACPE,IAAI,GAAI,gCACRC,SAAS,iBACZC,MAAOJ,EAAAA,GACG,4BACPI,MAAM,sBACND,SAAS,kBACZE,SAAUL,EAAAA,GACA,uBACPM,IAAI,EAAG,yBACPH,SAAS,uBAGRI,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbR,KAAM,GACNG,MAAO,GACPC,SAAU,IAGZN,iBAAkBA,EAClBW,SAAU,SAAAC,GACR,IAAMV,EAAOU,EAAMV,KACbG,EAAQO,EAAMP,MACdC,EAAWM,EAAMN,SACvBR,GAASe,EAAAA,EAAAA,IAAS,CAAEX,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,IAClC,IAGH,OACE,iCACE,SAAC,KAAD,iCACA,UAAC,KAAD,CAAcK,SAAUH,EAAOM,aAA/B,WACE,UAAC,KAAD,mBAEE,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAK,OACLb,KAAK,OACLc,MAAOR,EAAOS,OAAOf,KACrBgB,SAAUV,EAAOW,eAElBX,EAAOY,OAAOlB,MAAQM,EAAOa,QAAQnB,OACpC,SAAC,IAAD,UAAYM,EAAOY,OAAOlB,cAKhC,UAAC,KAAD,oBAEE,UAAC,KAAD,YACE,SAAC,KAAD,CACEa,KAAK,QACLb,KAAK,QACLc,MAAOR,EAAOS,OAAOZ,MACrBa,SAAUV,EAAOW,aACjBC,OAAQZ,EAAOY,OAAOf,OAASG,EAAOa,QAAQhB,QAE/CG,EAAOY,OAAOf,OAASG,EAAOa,QAAQhB,QACrC,SAAC,IAAD,UAAYG,EAAOY,OAAOf,eAKhC,UAAC,KAAD,uBAEE,UAAC,KAAD,YACE,SAAC,KAAD,CACEU,KAAK,WACLb,KAAK,WACLc,MAAOR,EAAOS,OAAOX,SACrBY,SAAUV,EAAOW,aACjBC,OAAQZ,EAAOY,OAAOd,UAAYE,EAAOa,QAAQf,WAElDE,EAAOY,OAAOd,UAAYE,EAAOa,QAAQf,WACxC,SAAC,IAAD,UAAYE,EAAOY,OAAOd,kBAKhC,SAAC,KAAD,CAAgBS,KAAK,SAArB,2BAIP,C,0NCrGYO,EAAe9B,EAAAA,GAAAA,KAAH,6FAMZ+B,EAAgB/B,EAAAA,GAAAA,MAAH,8KAOfC,EAAAA,EAAAA,WAKE+B,EAAgBhC,EAAAA,GAAAA,MAAH,gTAQf,SAAAiC,GAAK,OAAKA,EAAML,OAAS,UAAY,QAAhC,GAIL3B,EAAAA,EAAAA,WAOEiC,EAAiBlC,EAAAA,GAAAA,OAAH,qXAiBhBC,EAAAA,EAAAA,WAOEkC,EAAYnC,EAAAA,GAAAA,KAAH,+LAQXC,EAAAA,EAAAA,WAKEmC,EAAUpC,EAAAA,GAAAA,IAAH,2F","sources":["page/PhoneBook/PhoneBook.styled.js","page/RegistrationForm/RegistrationForm.jsx","page/RegistrationForm/RegistrationForm.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { breakpoints } from '../../components/Utils/Breakpoints';\n\nexport const TitleOne = styled.h1`\n  font-size: 32px;\n  font-weight: bold;\n  color: white;\n  text-align: center;\n  margin: 0;\n  margin-bottom: 10px;\n  @media ${breakpoints.minTablet} {\n    font-size: 48px;\n    margin-bottom: 20px;\n  }\n  @media ${breakpoints.desktop} {\n    font-size: 72px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 30px;\n  justify-content: center;\n  @media ${breakpoints.onlyTablet} {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  @media ${breakpoints.desktop} {\n    justify-content: space-around;\n  }\n`;\n\nexport const WrapperContact = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  border: none;\n  background-color: transparent;\n`;\n\nexport const WrapperModal = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { register } from 'redux/Auth/AuthOperations';\nimport { TitleOne } from '../PhoneBook/PhoneBook.styled.js';\nimport {\n  FormRegister,\n  LabelRegister,\n  InputRegister,\n  ButtonRegister,\n  ErrorText,\n  Wrraper,\n} from './RegistrationForm.styled.js';\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const validationSchema = yup.object({\n    name: yup\n      .string('Enter your name')\n      .max(40, 'Maximum length 40 characters')\n      .required('Name required'),\n    email: yup\n      .string('Enter your email address')\n      .email('Email is not valid')\n      .required('Email required'),\n    password: yup\n      .string('Enter your password')\n      .min(8, 'At least 8 characters')\n      .required('Password required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n\n    validationSchema: validationSchema,\n    onSubmit: event => {\n      const name = event.name;\n      const email = event.email;\n      const password = event.password;\n      dispatch(register({ name, email, password }));\n    },\n  });\n\n  return (\n    <>\n      <TitleOne>Registration page</TitleOne>\n      <FormRegister onSubmit={formik.handleSubmit}>\n        <LabelRegister>\n          Name\n          <Wrraper>\n            <InputRegister\n              type=\"name\"\n              name=\"name\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n            />\n            {formik.errors.name && formik.touched.name && (\n              <ErrorText>{formik.errors.name}</ErrorText>\n            )}\n          </Wrraper>\n        </LabelRegister>\n\n        <LabelRegister>\n          Email\n          <Wrraper>\n            <InputRegister\n              type=\"email\"\n              name=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              errors={formik.errors.email && formik.touched.email}\n            />\n            {formik.errors.email && formik.touched.email && (\n              <ErrorText>{formik.errors.email}</ErrorText>\n            )}\n          </Wrraper>\n        </LabelRegister>\n\n        <LabelRegister>\n          Password\n          <Wrraper>\n            <InputRegister\n              type=\"password\"\n              name=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              errors={formik.errors.password && formik.touched.password}\n            />\n            {formik.errors.password && formik.touched.password && (\n              <ErrorText>{formik.errors.password}</ErrorText>\n            )}\n          </Wrraper>\n        </LabelRegister>\n\n        <ButtonRegister type=\"submit\">Register</ButtonRegister>\n      </FormRegister>\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import styled from 'styled-components';\nimport { breakpoints } from 'components/Utils/Breakpoints';\n\nexport const FormRegister = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const LabelRegister = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: white;\n  font-size: 18px;\n  margin-bottom: 10px;\n\n  @media ${breakpoints.minTablet} {\n    font-size: 32px;\n  }\n`;\n\nexport const InputRegister = styled.input`\n  min-width: 278px;\n  max-width: 400px;\n  height: 60px;\n  margin-top: 5px;\n  border: none;\n  outline: none;\n  font-size: 18px;\n  color: ${props => (props.errors ? '#d32f2f' : 'orange')};\n  padding-left: 10px;\n  padding-top: 0;\n\n  @media ${breakpoints.minTablet} {\n    width: 500px;\n    font-size: 24px;\n    padding-left: 20px;\n  }\n`;\n\nexport const ButtonRegister = styled.button`\n  width: 120px;\n  height: 45px;\n  cursor: pointer;\n  background-color: transparent;\n  color: white;\n  border-color: white;\n  border-radius: 5%;\n  font-size: 18px;\n  font-weight: bold;\n  margin-top: 10px;\n\n  &:hover,\n  &:active {\n    color: orange;\n  }\n\n  @media ${breakpoints.minTablet} {\n    width: 180px;\n    height: 65px;\n    font-size: 24px;\n  }\n`;\n\nexport const ErrorText = styled.span`\n  position: absolute;\n  color: #d32f2f;\n  font-size: 14px;\n  font-weight: 600;\n  bottom: 0;\n  padding-left: 10px;\n\n  @media ${breakpoints.minTablet} {\n    padding-left: 20px;\n  }\n`;\n\nexport const Wrraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n"],"names":["TitleOne","styled","breakpoints","Wrapper","WrapperContact","BackButton","WrapperModal","dispatch","useDispatch","validationSchema","yup","name","max","required","email","password","min","formik","useFormik","initialValues","onSubmit","event","register","handleSubmit","type","value","values","onChange","handleChange","errors","touched","FormRegister","LabelRegister","InputRegister","props","ButtonRegister","ErrorText","Wrraper"],"sourceRoot":""}